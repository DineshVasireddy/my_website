{"version":3,"file":"static/js/57.84992fd5.chunk.js","mappings":"gKA2EA,QAxEA,WACI,MAAOA,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,MAC7CG,GAAaC,EAAAA,EAAAA,QAAO,KACnBC,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,GAuC3C,OArCAO,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,2EAE3BC,EADOH,EAASI,KAEjBC,QAAQ,QAAS,MACjBC,OACAC,MAAM,SACNC,KAAIC,IACD,MAAMC,EAAQD,EAAIF,MAAM,SAGxB,MAAO,CAAEI,SAFQD,EAAM,GAAGL,QAAQ,OAAQ,IAAIC,OAE3BM,OADJF,EAAM,GAAKA,EAAM,GAAGJ,OAAS,GACjB,IAE9BO,QAAOJ,GAAOA,EAAIE,UAAYF,EAAIG,SAEvCtB,EAAQa,GACRN,GAAa,EACjB,CAAE,MAAOiB,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,GAGJE,GAEA,MAAMC,EAAQC,YAAW,KACrBrB,GAAa,EAAK,GACnB,KAEH,MAAO,IAAMsB,aAAaF,EAAM,GACjC,KAOCG,EAAAA,EAAAA,KAAA,UAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASF,SAAA,EACpBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCACJD,EAAAA,EAAAA,KAAA,OAAKG,UAAW,SAAQ3B,EAAY,UAAY,IAAKyB,SAChDhC,EAAKmB,KAAI,CAACC,EAAKe,KAAK,IAAAC,EAAA,OACjBH,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,WAAWG,QAASA,IAV7CF,KAClB/B,EAAiBD,IAAkBgC,EAAQ,KAAOA,EAAM,EASaG,CAAaH,GAAOH,SAAA,EACrED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcF,UACzBD,EAAAA,EAAAA,KAAA,MAAAC,SAAKZ,EAAIE,cAEbS,EAAAA,EAAAA,KAAA,OACIQ,IAAKC,GAAMnC,EAAWoC,QAAQN,GAASK,EACvCN,UAAU,aACVQ,MAAO,CACHC,UAAWxC,IAAkBgC,EAAQ,GAA4B,QAA5BC,EAAG/B,EAAWoC,QAAQN,UAAM,IAAAC,OAAA,EAAzBA,EAA2BQ,iBAAmB,EACtFC,QAAS1C,IAAkBgC,EAAQ,EAAI,EACvCW,WAAY,2CACdd,UAEFD,EAAAA,EAAAA,KAAA,KAAAC,SAAIZ,EAAIG,aAbNY,EAeJ,UAM9B,C","sources":["components/FAQ.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FAQ() {\r\n    const [faqs, setFaqs] = useState([]);\r\n    const [expandedIndex, setExpandedIndex] = useState(null);\r\n    const answerRefs = useRef([]);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchFAQs = async () => {\r\n            try {\r\n                const response = await axios.get('https://github.com/DineshVasireddy/my_website/blob/main/public/faqs.txt');\r\n                const data = response.data;\r\n                const faqArray = data\r\n                    .replace(/\\r\\n/g, '\\n')\r\n                    .trim()\r\n                    .split(/\\n\\n+/)\r\n                    .map(faq => {\r\n                        const parts = faq.split(/\\nA: /);\r\n                        const question = parts[0].replace(/^Q: /, '').trim();\r\n                        const answer = parts[1] ? parts[1].trim() : '';\r\n                        return { question, answer };\r\n                    })\r\n                    .filter(faq => faq.question && faq.answer);\r\n\r\n                setFaqs(faqArray);\r\n                setIsVisible(false); // Set visibility after fetching FAQs\r\n            } catch (error) {\r\n                console.error('Error fetching FAQs:', error);\r\n            }\r\n        };\r\n\r\n        fetchFAQs();\r\n\r\n        const timer = setTimeout(() => {\r\n            setIsVisible(true);\r\n        }, 100); \r\n\r\n        return () => clearTimeout(timer);\r\n    }, []); \r\n\r\n    const handleToggle = (index) => {\r\n        setExpandedIndex(expandedIndex === index ? null : index);\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <div className='content'>\r\n                <h2>Frequently Asked Questions</h2>\r\n                <div className={`faqs ${isVisible ? 'visible' : ''}`}>\r\n                    {faqs.map((faq, index) => (\r\n                        <div key={index} className='faq-item' onClick={() => handleToggle(index)}>\r\n                            <div className='faq-question'>\r\n                                <h5>{faq.question}</h5>\r\n                            </div>\r\n                            <div\r\n                                ref={el => answerRefs.current[index] = el}\r\n                                className='faq-answer'\r\n                                style={{\r\n                                    maxHeight: expandedIndex === index ? `${answerRefs.current[index]?.scrollHeight}px` : 0,\r\n                                    opacity: expandedIndex === index ? 1 : 0,\r\n                                    transition: 'max-height 0.3s ease, opacity 0.3s ease'\r\n                                }}\r\n                            >\r\n                                <p>{faq.answer}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default FAQ;"],"names":["faqs","setFaqs","useState","expandedIndex","setExpandedIndex","answerRefs","useRef","isVisible","setIsVisible","useEffect","async","response","axios","get","faqArray","data","replace","trim","split","map","faq","parts","question","answer","filter","error","console","fetchFAQs","timer","setTimeout","clearTimeout","_jsx","children","_jsxs","className","index","_answerRefs$current$i","onClick","handleToggle","ref","el","current","style","maxHeight","scrollHeight","opacity","transition"],"sourceRoot":""}